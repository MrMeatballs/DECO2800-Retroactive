{
  defaultInteriorTile: {
    // Used for tile region specification and null texture declarations on grid
    class: com.deco2800.game.maps.terrain.TerrainFactory
    method: createTile
    assets: [images/tiles/iso/iso_floor_1.png]
  }
  defaultInteriorWall: {
    // Used for wall generation in hallways
    class: com.deco2800.game.entities.factories.ObstacleFactory
    method: createWall
    assets: [images/objects/walls/3.png]
  }
  tileMap: {
    // Grass tile. Can specify multiple textures and their chance to spawn
    _: {
      class: com.deco2800.game.maps.terrain.TerrainFactory
      method: createTile
      assets: [images/tiles/iso/iso_wall_1_left.png]
    }
  }
  entityMap: {
    // Exterior wall. Can specify multiple textures and their chance to spawn
    .: {
      class: com.deco2800.game.entities.factories.ObstacleFactory
      method: createWall
      assets: [images/objects/walls/wall.png]
    }
    // Creates a horizontally-facing door. In isometric view, this is northwest to southeast
    -: {
      class: com.deco2800.game.entities.factories.ObstacleFactory
      method: createDoor
      assets: [images/objects/door/door_animationL.atlas]
    }
    // Creates a vertically-facing door. In isometric view, this is northeast to southwest
    |: {
      class: com.deco2800.game.entities.factories.ObstacleFactory
      method: createDoor
      assets: [images/objects/door/door_animationL.atlas]
    }
    /* No entity. This overrides any entities relative to the interior's position
    *: {
      class: null
      method: null
      assets: []
    } */
  }
  roomMap: {
    A: {
      type: bathroom
      offset: [14, 0]
      dimensions: [10, 15]
      interior: {
        tileMap: {
          a: {
            class: com.deco2800.game.maps.terrain.TerrainFactory
            method: createTile
            assets: [images/tiles/iso/iso_wall_1_left.png]
          }
        }
        entityMap: {
          W: {
            class: com.deco2800.game.entities.factories.ObstacleFactory
            method: createWall
            assets: [images/objects/walls/3.png]
          }
          B: {
            class: com.deco2800.game.entities.factories.ObstacleFactory
            method: createBed
            assets: [images/objects/bed/bed.atlas]
          }
          D: {
            class: com.deco2800.game.entities.factories.ObstacleFactory
            method: createDoor
            assets: [images/objects/door/door_animationL.atlas]
          }
          T: {
            class: com.deco2800.game.entities.factories.ObstacleFactory
            method: createTv
            assets: [images/objects/tv/tv_animationL.atlas]
          }
          b: {
            class: com.deco2800.game.entities.factories.ObstacleFactory
            method: createBananaPeel
            assets: [images/objects/banana_peel/banana.atlas]
          }
          M: {
            class: com.deco2800.game.entities.factories.NPCFactory
            method: createMum
            assets: [images/characters/mum_01/mum_01.atlas]
          }
        }
        tileGrid: [
          [., ., ., ., ., ., ., ., ., .],
          [., ., ., ., ., ., ., ., ., .],
          [., ., ., ., ., ., ., ., ., .],
          [., ., ., ., ., ., ., ., ., .],
          [., ., ., ., ., ., ., ., ., .],
          [., ., ., ., ., ., ., ., ., .],
          [., ., ., ., ., ., ., ., ., .],
          [., ., ., ., ., ., ., ., ., .],
          [., ., ., ., ., ., ., ., ., .],
          [., ., ., ., ., ., ., ., ., .],
          [., ., ., ., ., ., ., ., ., .],
          [., ., ., ., ., ., ., ., ., .],
          [., ., ., ., ., ., ., ., ., .],
          [., ., ., ., ., ., ., ., ., .],
          [., ., ., ., ., ., ., ., ., .]
        ]
        entityGrid: [
          [W, W, W, W, W, W, W, W, W, W],
          [W, ., ., ., ., ., ., ., ., .],
          [W, B, ., D, ., T, ., b, ., .],
          [W, ., ., ., ., ., ., ., ., .],
          [W, ., ., ., ., ., ., ., ., .],
          [W, ., ., ., ., ., ., ., ., .],
          [W, ., ., ., ., ., ., ., ., .],
          [W, ., ., ., ., ., ., ., ., .],
          [W, ., ., ., ., ., ., ., ., .],
          [W, ., ., ., ., ., ., ., ., .],
          [W, ., ., ., ., ., ., ., ., .],
          [W, ., ., ., ., ., ., ., ., .],
          [W, ., ., ., ., ., ., ., ., .],
          [W, ., ., ., ., ., ., ., ., .],
          [W, ., ., ., ., ., ., ., ., M]
        ]
      }
    }
  }
  floorGrid: [
//   0  1  2  3  4  5  6  7  8  9 10
    [A, A, A, A, A, A, A, A, A, A, .],
    [A, A, A, A, A, A, A, A, A, A, .],
    [A, A, A, A, A, A, A, A, A, A, .],
    [A, A, A, A, A, A, A, A, A, A, .],
    [A, A, A, A, A, A, A, A, A, A, .],
    [A, A, A, A, A, A, A, A, A, A, .],
    [A, A, A, A, A, A, A, A, A, A, .],
    [A, A, A, A, A, A, A, A, A, A, .],
    [A, A, A, A, A, A, A, A, A, A, .],
    [A, A, A, A, A, A, A, A, A, A, .],
    [A, A, A, A, A, A, A, A, A, A, .],
    [A, A, A, A, A, A, A, A, A, A, .],
    [A, A, A, A, A, A, A, A, A, A, .],
    [A, A, A, A, A, A, A, A, A, A, .],
    [A, A, A, A, A, A, A, A, A, A, .],
    [., ., ., ., ., ., ., ., ., ., .]
  ]
}