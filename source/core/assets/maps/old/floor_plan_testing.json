{
  defaultTileObject: {
    class: com.deco2800.game.maps.terrain.TerrainFactory
    method: createTile
    assets: [images/tiles/iso/iso_floor_1.png]
  }
  roomMappings: {
    A: {
      offset: [1, 1]
      dimensions: [10, 15]
      numDoorways: 0
      com.deco2800.game.maps.rooms.Bedroom: {
        maxDoorways: 999
        doorwayRestrictions: {
          com.deco2800.game.maps.rooms.Hallway: [single_door]
        }
        extraDoorways: null
        com.deco2800.game.maps.rooms.Bedroom$BedroomInterior: {
          interiorTiles: {
            a: {
              class: com.deco2800.game.maps.terrain.TerrainFactory
              method: createTile
              assets: [images/tiles/iso/iso_wall_1_left.png]
            }
          }
          interiorEntities: {
            B: {
              class: com.deco2800.game.entities.factories.ObstacleFactory
              method: createBed
              assets: [images/objects/bed/bed.atlas]
            }
            D: {
              class: com.deco2800.game.entities.factories.ObstacleFactory
              method: createDoor
              assets: [images/objects/door/door_animationL.atlas]
            }
            M: {
              class: com.deco2800.game.entities.factories.NPCFactory
              method: createMum
              assets: [images/characters/mum_01/mum_01.atlas]
            }
            T: {
              class: com.deco2800.game.entities.factories.ObstacleFactory
              method: createTv
              assets: [images/objects/tv/tv_animationL.atlas]
            }
            b: {
              class: com.deco2800.game.entities.factories.ObstacleFactory
              method: createBananaPeel
              assets: [images/objects/banana_peel/banana.atlas]
            }
          }
          tileGrid: [
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .]
          ]
          entityGrid: [
            [., ., ., ., ., ., ., ., ., .],
            [B, ., ., D, ., ., T, ., ., b],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., .],
            [., ., ., ., ., ., ., ., ., M]
          ]
        }
      }
    }
  }
  miscMappings: {
    .: createWall
  }
  floorGrid: [
//   0  1  2  3  4  5  6  7  8  9 10 11
    [., ., ., ., ., ., ., ., ., ., ., .],
    [., A, A, A, A, A, A, A, A, A, A, .],
    [., A, A, A, A, A, A, A, A, A, A, .],
    [., A, A, A, A, A, A, A, A, A, A, .],
    [., A, A, A, A, A, A, A, A, A, A, .],
    [., A, A, A, A, A, A, A, A, A, A, .],
    [., A, A, A, A, A, A, A, A, A, A, .],
    [., A, A, A, A, A, A, A, A, A, A, .],
    [., A, A, A, A, A, A, A, A, A, A, .],
    [., A, A, A, A, A, A, A, A, A, A, .],
    [., A, A, A, A, A, A, A, A, A, A, .],
    [., A, A, A, A, A, A, A, A, A, A, .],
    [., A, A, A, A, A, A, A, A, A, A, .],
    [., A, A, A, A, A, A, A, A, A, A, .],
    [., A, A, A, A, A, A, A, A, A, A, .],
    [., A, A, A, A, A, A, A, A, A, A, .],
    [., ., ., ., ., ., ., ., ., ., ., .]
  ]
}